rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB
    }
    
    function isValidDocument() {
      return request.resource.contentType.matches('application/pdf')
        && request.resource.size < 10 * 1024 * 1024; // 10MB
    }

    // Profile images
    match /profile-images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId) && isValidImage();
      allow update: if isOwner(userId) && isValidImage();
      allow delete: if isOwner(userId);
    }

    // Group resources
    match /group-resources/{groupId}/{fileName} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && request.auth.uid == resource.metadata.uploadedBy;
      allow delete: if isAuthenticated() && request.auth.uid == resource.metadata.uploadedBy;
    }

    // Study materials
    match /study-materials/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId) && isValidDocument();
      allow update: if isOwner(userId) && isValidDocument();
      allow delete: if isOwner(userId);
    }
  }
} 